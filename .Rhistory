),
condition = factor(
case_when(
condition == "no" ~ "Control",
condition == "low" ~ "Low BFR",
condition == "high" ~ "High BFR"
),
levels = c("Control", "Low BFR", "High BFR")
)
)
View(sit_reach_pred)
?ggpredict
sit_reach_pred <- tibble(
ggeffects::ggpredict(
sit_reach_model,
terms = c(
"timepoint [0,1]", "condition", "subject_number [1:20]"
)
), type = "random"
) |>
rename("timepoint" = x,
"condition" = group) |>
mutate(timepoint = factor(
case_when(
timepoint == 0 ~ "Pre",
timepoint == 1 ~ "Post"
),
levels = c("Pre", "Post")
),
condition = factor(
case_when(
condition == "no" ~ "Control",
condition == "low" ~ "Low BFR",
condition == "high" ~ "High BFR"
),
levels = c("Control", "Low BFR", "High BFR")
)
)
View(sit_reach_pred)
sit_reach_pred <- tibble(
ggeffects::ggpredict(
sit_reach_model,
terms = c(
"timepoint [0,1]", "condition"
)
), type = "random"
) |>
rename("timepoint" = x,
"condition" = group) |>
mutate(timepoint = factor(
case_when(
timepoint == 0 ~ "Pre",
timepoint == 1 ~ "Post"
),
levels = c("Pre", "Post")
),
condition = factor(
case_when(
condition == "no" ~ "Control",
condition == "low" ~ "Low BFR",
condition == "high" ~ "High BFR"
),
levels = c("Control", "Low BFR", "High BFR")
)
)
lactate_model
summary(lactate_model)
summary(borg_rpe_model)
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model)
sjPlot::get_model_data(heart_rate_model)
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
pred.labels = c("(Intercept) Condition [Control]"))
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
pred.labels = c(
"(Intercept) Condition [Control]",
"Condition [Low BFR]",
"Condition [High BFR]",
"Minutes",
"Condition [Low BFR]:Minutes",
"Condition [High BFR]:Minutes",
"Timepoint",
"Condition [Low BFR]:Timepoint",
"Condition [Low BFR]:Timepoint"
))
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
pred.labels = c(
"Intercept - Condition [Control]",
"Condition [Low BFR]",
"Condition [High BFR]",
"Minutes",
"Condition [Low BFR]:Minutes",
"Condition [High BFR]:Minutes",
"Timepoint",
"Condition [Low BFR]:Timepoint",
"Condition [Low BFR]:Timepoint"
),
# dv.labels = c(
#   bquote("Heart Rate (beats.minute"^-1~")"),
#
# ),
transform = "exp"
)
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
pred.labels = c(
"Intercept - Condition [Control]",
"Condition [Low BFR]",
"Condition [High BFR]",
"Minutes",
"Condition [Low BFR]:Minutes",
"Condition [High BFR]:Minutes",
"Timepoint",
"Condition [Low BFR]:Timepoint",
"Condition [Low BFR]:Timepoint"
),
dv.labels = c(
bquote("Heart Rate (beats.minute"^-1~")"),
bquote("Blood Lactate (log(mmol."~L^-1~"))"),
"Rating of Perceived Exertion (6-20 scale)"
)
)
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
pred.labels = c(
"Intercept - Condition [Control]",
"Condition [Low BFR]",
"Condition [High BFR]",
"Minutes",
"Condition [Low BFR]:Minutes",
"Condition [High BFR]:Minutes",
"Timepoint",
"Condition [Low BFR]:Timepoint",
"Condition [Low BFR]:Timepoint"
),
dv.labels = c(
paste(bquote("Heart Rate (beats.minute"^-1~")")),
bquote("Blood Lactate (log(mmol."~L^-1~"))"),
"Rating of Perceived Exertion (6-20 scale)"
)
)
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
show.reflvl = TRUE)
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
show.reflvl = TRUE, p.threshold = NULL)
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
show.reflvl = TRUE, p.threshold = 0)
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
show.reflvl = TRUE, p.style = "numeric")
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
pred.labels = c(
"Intercept - Condition [Control]",
"Condition [Low BFR]",
"Condition [High BFR]",
"Minutes",
"Condition [Low BFR]:Minutes",
"Condition [High BFR]:Minutes",
"Timepoint",
"Condition [Low BFR]:Timepoint",
"Condition [Low BFR]:Timepoint"
),
dv.labels = c(
"Heart Rate",
"Blood Lactate (log)",
"Rating of Perceived Exertion"
)
)
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
pred.labels = c(
"Intercept - Condition [Control]",
"Condition [Low BFR]",
"Condition [High BFR]",
"Minutes",
"Condition [Low BFR]:Minutes",
"Condition [High BFR]:Minutes",
"Timepoint",
"Condition [Low BFR]:Timepoint",
"Condition [Low BFR]:Timepoint",
"subject"
),
dv.labels = c(
"Heart Rate",
"Blood Lactate (log)",
"Rating of Perceived Exertion"
)
)
broom.mixed::tidy(lactate_model, conf.int=TRUE)
targets::tar_make()
targets::tar_load(c(
sit_reach_data,
lactate_data,
borg_rpe_data,
heart_rate_data,
cmj_data,
sprint_data,
imtp_data,
sit_reach_model,
lactate_model,
borg_rpe_model,
heart_rate_model,
cmj_model,
sprint_model,
imtp_model,
sit_reach_model_tidy,
lactate_model_tidy,
borg_rpe_model_tidy,
heart_rate_model_tidy,
cmj_model_tidy,
sprint_model_tidy,
imtp_model_tidy,
sit_reach_plot,
lactate_plot,
borg_rpe_plot,
heart_rate_plot,
cmj_plot,
sprint_plot,
imtp_plot
))
View(heart_rate_model_tidy)
test <- left_join(heart_rate_model_tidy, lactate_model_tidy, by = c("effect", "term"))
View(test)
test <- left_join(heart_rate_model_tidy, lactate_model_tidy, by = c("effect", "group", "term"))
test
test <- left_join(heart_rate_model_tidy, lactate_model_tidy, borg_rpe_model_tidy, by = c("effect", "group", "term"))
View(test)
test <- left_join(heart_rate_model_tidy, lactate_model_tidy, by = c("effect", "group", "term")) |>
left_join(borg_rpe_model_tidy, by = c("effect", "group", "term"))
View(test)
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model)
11.47629594^2
test <- sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model)
View(test)
test$knitr
install.packages("modelsummary")
modelsummary::modelsummary(heart_rate_model_tidy, lactate_model_tidy, borg_rpe_model)
modelsummary::modelsummary(list("heart_rate_model_tidy", "lactate_model_tidy", "borg_rpe_model"))
modelsummary::modelsummary(list(heart_rate_model_tidy, lactate_model_tidy,borg_rpe_model))
modelsummary::modelsummary(heart_rate_model)
models <- list(
"heart_rate" = heart_rate_model,
"lactate" = lactate_model
)
modelsummary::modelsummary(models)
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"))
models <- list(
"Heart Rate" = heart_rate_model,
bquote("Blood Lactate (mmol."~L^-1~")") = lactate_model
models <- list(
"Heart Rate" = heart_rate_model,
"bquote("Blood Lactate (mmol."~L^-1~")")" = lactate_model
models <- list(
"Heart Rate" = heart_rate_model,
bquote("Blood Lactate (mmol."~L^-1~")") = lactate_model
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 2)
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 2,
estimate  = "{estimate} [{conf.low}, {conf.high}]"
)
sjPlot::tab_model(heart_rate_model)
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 2,
estimate  = "{estimate} [{conf.low}, {conf.high}]"
)
sjPlot::tab_model(heart_rate_model)
heart_rate_model
summary(heart_rate_model)
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 2,
estimate  = "{estimate} [{conf.low}, {conf.high}], {p.value}"
)
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 2,
statistic = "conf.int"
)
models <- list(
"Heart Rate" = heart_rate_model,
"Lactate" = lactate_model,
"RPE" = borg_rpe_model
)
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 2,
statistic = "conf.int"
)
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 2,
statistic = c("conf.int",
"s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 2,
statistic = c("95% CI = {conf.int}",
"s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 2,
statistic = c("CI = {conf.int}",
"s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 2,
statistic = c("95% = conf.int",
"s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 2,
statistic = c("95% = {conf.int}",
"s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 3,
statistic = c("conf.int",
"s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary::modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = fmt_statistic(estimate = 2, conf.int = 2, std.error = 2, statistic = 2),
statistic = c("conf.int",
"s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
library(modelsummary)
modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = fmt_statistic(estimate = 2, conf.int = 2, std.error = 2, statistic = 2),
statistic = c("conf.int",
"s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = fmt_statistic(estimate = 2, conf.int = 2, std.error = 2, statistic = 2),
statistic = c("95% CI = {conf.int}",
"s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = fmt_statistic(estimate = 2, conf.int = 2, std.error = 2, statistic = 2),
estimate  = "{estimate} [{conf.low}, {conf.high}]",
statistic = c("s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = fmt_statistic(estimate = 2, conf.int = 2, std.error = 2, statistic = 2),
estimate  = "{estimate} [95% CI: {conf.low}, {conf.high}]",
statistic = c("s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = fmt_statistic(estimate = 2, conf.int = 2, std.error = 2, statistic = 2, p.value = 3),
estimate  = "{estimate} [95% CI: {conf.low}, {conf.high}]",
statistic = c("s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = fmt_statistic(estimate = 2, conf.int = 2, std.error = 2, statistic = 2, p.value = 5),
estimate  = "{estimate} [95% CI: {conf.low}, {conf.high}]",
statistic = c("s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = fmt_statistic(estimate = 2, conf.int = 2, std.error = 2, statistic = 2, p.value = EXACT),
estimate  = "{estimate} [95% CI: {conf.low}, {conf.high}]",
statistic = c("s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = fmt_statistic(estimate = 2, conf.int = 2, std.error = 2, statistic = 2, p.value = NULL),
estimate  = "{estimate} [95% CI: {conf.low}, {conf.high}]",
statistic = c("s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = fmt_statistic(estimate = 2, conf.int = 2, std.error = 2, statistic = 2),
estimate  = "{estimate} [95% CI: {conf.low}, {conf.high}]",
statistic = c("s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary(models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = fmt_statistic(estimate = 2, conf.int = 2, std.error = 2, statistic = 2),
statistic = c("[95% CI: {conf.low}, {conf.high}]",
"s.e. = {std.error}",
"t = {statistic}",
"p = {p.value}"))
modelsummary(
models,
coef_rename = c("SD (Observations)" = "residual"),
fmt = 2,
statistic = c(
"[95% CI: {conf.low}, {conf.high}]"
)
)
?sjPlot::tab_model()
#| message: false
#| warning: false
#| echo: false
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
dv.labels = c("Heart Rate", "Lactate", "RPE"),
transform = NULL)
#| message: false
#| warning: false
#| echo: false
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
dv.labels = c("Heart Rate", "Lactate", "RPE"),
transform = exp)
#| message: false
#| warning: false
#| echo: false
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
dv.labels = c("Heart Rate", "Lactate", "RPE"),
transform = "exp")
#| message: false
#| warning: false
#| echo: false
sjPlot::tab_model(heart_rate_model, lactate_model, borg_rpe_model,
dv.labels = c("Heart Rate", "Lactate", "RPE"))
sjPlot::tab_model(lactate_model)
sjPlot::tab_model(lactate_model, transform = exp)
sjPlot::tab_model(lactate_model, transform = "exp")
sjPlot::tab_model(heart_rate_model, dv.labels = "Heart Rate")
#| message: false
#| warning: false
#| echo: false
sjPlot::tab_model(lactate_model, dv.labels = "Lactate (mmol.L)", transform = "exp")
sjPlot::tab_model(heart_rate_model)
heart_rate_model_tidy
heart_rate_model_tidy$estimate[3]
round(heart_rate_model_tidy, 2)
heart_rate_model_tidy |>
round()
heart_rate_model_tidy |> mutate_all(round())
heart_rate_model_tidy |> mutate(across(where(is.numeric), round, 3))
heart_rate_model_tidy |> mutate(across(2:7, \(x) round(x, 3)))
heart_rate_model_tidy |> mutate_if(is.numeric, round, 3)
lactate_model_tidy
lactate_model_tidy <- lactate_model_tidy |>
mutate_if(is.numeric, round, 2) |>
mutate_if(is.numeric, exp)
lactate_model_tidy
sjPlot::tab_model(lactate_model, transform = "exp")
lactate_model_tidy <- lactate_model_tidy |>
mutate_if(is.numeric, round, 2) |>
mutate_all(c(estimate, conf.low, conf.high), exp)
lactate_model_tidy <- lactate_model_tidy |>
mutate_if(is.numeric, round, 2) |>
mutate_all(c("estimate", "conf.low", "conf.high"), exp)
lactate_model_tidy <- lactate_model_tidy |>
mutate_if(is.numeric, round, 2) |>
mutate_if(c("estimate", "conf.low", "conf.high"), exp)
lactate_model_tidy <- lactate_model_tidy |>
mutate_if(is.numeric, round, 2) |>
mutate_at(c("estimate", "conf.low", "conf.high"), exp)
lactate_model_tidy
targets::tar_load(c(
sit_reach_model_tidy,
lactate_model_tidy,
borg_rpe_model_tidy,
heart_rate_model_tidy,
cmj_model_tidy,
sprint_model_tidy,
imtp_model_tidy
))
lactate_model_tidy <- lactate_model_tidy |>
mutate_if(is.numeric, round, 2) |>
mutate_at(c("estimate", "conf.low", "conf.high"), exp)
lactate_model_tidy
targets::tar_load(c(
sit_reach_model_tidy,
lactate_model_tidy,
borg_rpe_model_tidy,
heart_rate_model_tidy,
cmj_model_tidy,
sprint_model_tidy,
imtp_model_tidy
))
lactate_model_tidy
sjPlot::tab_model(borg_rpe_model)
borg_rpe_model_tidy
sjPlot::tab_model(sit_reach_model)
sit_reach_model_tidy
sjPlot::tab_model(cmj_model)
cmj_model_tidy
sjPlot::tab_model(sprint_model)
sprint_model_tidy
sprint_model_tidy <- sprint_model_tidy |>
mutate_if(is.numeric, round, 4)
sprint_model_tidy
sjPlot::tab_model(imtp_model)
